{
    "name": "react-form-helper",
    "mainModule": "dist/src/index.js",
    "outDir": "dist",
    "typeDeclaration": {
        "128": "7",
        "160": "8",
        "174": "9",
        "841": "10",
        "842": "11"
    },
    "declarationModule": {
        "0": "dist/src/browser-components.js",
        "1": "dist/src/browser-components.js",
        "2": "dist/src/validation.js",
        "3": "dist/src/validation.js",
        "4": "dist/src/helpers.js",
        "5": "dist/src/helpers.js",
        "6": "dist/src/helpers.js",
        "7": "dist/src/index.js",
        "8": "dist/src/index.js",
        "9": "dist/src/index.js",
        "10": "dist/src/extras/scroll-into-view-helper.js",
        "11": "dist/src/extras/scroll-into-view-helper.js",
        "12": "dist/src/extras/scroll-into-view-helper.js",
        "13": "dist/src/extras/scroll-into-view-helper.js"
    },
    "modules": {
        "dist/src/browser-components.js": {
            "name": "browser-components",
            "srcPath": "src/browser-components.tsx",
            "outPath": "dist/src/browser-components.js",
            "declarations": {
                "0": {
                    "id": "0",
                    "kind": "Component",
                    "exportedIn": [],
                    "name": "BrowserButton",
                    "documentation": "",
                    "properties": [
                        {
                            "name": "loading",
                            "documentation": "",
                            "type": {
                                "kind": "Named",
                                "name": "any",
                                "id": 3
                            },
                            "optional": false
                        }
                    ]
                },
                "1": {
                    "id": "1",
                    "kind": "Component",
                    "exportedIn": [],
                    "name": "BrowserInput",
                    "documentation": "",
                    "properties": []
                }
            },
            "reexports": []
        },
        "dist/src/validation.js": {
            "name": "validation",
            "srcPath": "src/validation.ts",
            "outPath": "dist/src/validation.js",
            "declarations": {
                "2": {
                    "id": "2",
                    "kind": "Variable",
                    "exportedIn": [
                        {
                            "path": "dist/src/index.js",
                            "name": "required"
                        }
                    ],
                    "name": "required",
                    "documentation": "Key used for specifying an error message for required fields\n\nExample:\n```\n{\n   path: ['email'],\n   label: 'Email',\n   type: 'email',\n   required: true,\n   validations: {\n     [required]: {text: 'A valid email is required'},\n   },\n}\n```",
                    "type": {
                        "kind": "StringLiteral",
                        "value": "required"
                    },
                    "value": "'required'"
                },
                "3": {
                    "id": "3",
                    "kind": "Function",
                    "exportedIn": [
                        {
                            "path": "dist/src/index.js",
                            "name": "pattern"
                        }
                    ],
                    "name": "pattern",
                    "documentation": "Validate an input against a regex\n\nExample:\n```\n{\n   path: ['email'],\n   label: 'Email',\n   type: 'email',\n   validations: {\n     email: {\n       text: 'The email is invalid',\n       validation: pattern(emailRegex),\n     },\n   },\n}\n```",
                    "parameters": [
                        {
                            "name": "pattern",
                            "documentation": "",
                            "type": {
                                "kind": "Named",
                                "name": "RegExp",
                                "id": 33,
                                "importedFrom": "lib es5"
                            },
                            "optional": false
                        }
                    ],
                    "returnType": {
                        "kind": "Function",
                        "parameters": [
                            {
                                "name": "value",
                                "documentation": "",
                                "type": {
                                    "kind": "Named",
                                    "name": "string",
                                    "id": 8
                                },
                                "optional": false
                            }
                        ],
                        "returnType": {
                            "kind": "Named",
                            "name": "boolean",
                            "id": 12
                        }
                    }
                }
            },
            "reexports": []
        },
        "dist/src/helpers.js": {
            "name": "helpers",
            "srcPath": "src/helpers.ts",
            "outPath": "dist/src/helpers.js",
            "declarations": {
                "4": {
                    "id": "4",
                    "kind": "Function",
                    "exportedIn": [],
                    "name": "isEqual",
                    "documentation": "Check is two arrays are equal (same length and all elements are ===)",
                    "parameters": [
                        {
                            "name": "a",
                            "documentation": "",
                            "type": {
                                "kind": "Named",
                                "name": "Array",
                                "parameters": [
                                    {
                                        "kind": "Named",
                                        "name": "any",
                                        "id": 1
                                    }
                                ],
                                "id": 40,
                                "importedFrom": "lib es2016"
                            },
                            "optional": false
                        },
                        {
                            "name": "b",
                            "documentation": "",
                            "type": {
                                "kind": "Named",
                                "name": "Array",
                                "parameters": [
                                    {
                                        "kind": "Named",
                                        "name": "any",
                                        "id": 1
                                    }
                                ],
                                "id": 40,
                                "importedFrom": "lib es2016"
                            },
                            "optional": false
                        }
                    ],
                    "returnType": {
                        "kind": "Named",
                        "name": "boolean",
                        "id": 12
                    }
                },
                "5": {
                    "id": "5",
                    "kind": "Function",
                    "exportedIn": [],
                    "name": "isValid",
                    "documentation": "",
                    "parameters": [
                        {
                            "name": "fields",
                            "documentation": "",
                            "type": {
                                "kind": "Named",
                                "name": "Array",
                                "parameters": [
                                    {
                                        "kind": "Named",
                                        "name": "FieldConfig",
                                        "id": 128
                                    }
                                ],
                                "id": 129,
                                "importedFrom": "lib es2016"
                            },
                            "optional": false
                        },
                        {
                            "name": "updatedObject",
                            "documentation": "",
                            "type": {
                                "kind": "Named",
                                "name": "any",
                                "id": 1
                            },
                            "optional": false
                        }
                    ],
                    "returnType": {
                        "kind": "Object",
                        "properties": [
                            {
                                "name": "validatedFields",
                                "documentation": "",
                                "type": {
                                    "kind": "Named",
                                    "name": "Array",
                                    "parameters": [
                                        {
                                            "kind": "Named",
                                            "name": "FieldConfig",
                                            "id": 128
                                        }
                                    ],
                                    "id": 129,
                                    "importedFrom": "lib es2016"
                                },
                                "optional": false
                            },
                            {
                                "name": "valid",
                                "documentation": "",
                                "type": {
                                    "kind": "Named",
                                    "name": "boolean",
                                    "id": 12
                                },
                                "optional": false
                            }
                        ]
                    }
                },
                "6": {
                    "id": "6",
                    "kind": "Function",
                    "exportedIn": [],
                    "name": "getValue",
                    "documentation": "",
                    "parameters": [
                        {
                            "name": "path",
                            "documentation": "",
                            "type": {
                                "kind": "Named",
                                "name": "any",
                                "id": 1
                            },
                            "optional": false
                        },
                        {
                            "name": "updatedObject",
                            "documentation": "",
                            "type": {
                                "kind": "Named",
                                "name": "any",
                                "id": 1
                            },
                            "optional": false
                        }
                    ],
                    "returnType": {
                        "kind": "Object",
                        "properties": []
                    }
                }
            },
            "reexports": []
        },
        "dist/src/index.js": {
            "name": "index",
            "srcPath": "src/index.tsx",
            "outPath": "dist/src/index.js",
            "declarations": {
                "7": {
                    "id": "7",
                    "kind": "Type",
                    "exportedIn": [],
                    "name": "FieldConfig",
                    "documentation": "",
                    "type": {
                        "kind": "Object",
                        "properties": [
                            {
                                "name": "path",
                                "documentation": "Path to control in the object passed to FormHelper",
                                "type": {
                                    "kind": "Named",
                                    "name": "Array",
                                    "parameters": [
                                        {
                                            "kind": "Named",
                                            "name": "string",
                                            "id": 8
                                        }
                                    ],
                                    "id": 139,
                                    "importedFrom": "lib es2016"
                                },
                                "optional": false
                            },
                            {
                                "name": "component",
                                "documentation": "Component to render, defaults to the inputComponent passed to FormHelper",
                                "type": {
                                    "kind": "Named",
                                    "name": "ReactType",
                                    "id": 149,
                                    "importedFrom": "react"
                                },
                                "optional": true
                            },
                            {
                                "name": "render",
                                "documentation": "",
                                "type": {
                                    "kind": "Function",
                                    "parameters": [
                                        {
                                            "name": "props",
                                            "documentation": "",
                                            "type": {
                                                "kind": "Named",
                                                "name": "any",
                                                "id": 1
                                            },
                                            "optional": false
                                        }
                                    ],
                                    "returnType": {
                                        "kind": "Named",
                                        "name": "ReactType",
                                        "id": 149,
                                        "importedFrom": "react"
                                    }
                                },
                                "optional": true
                            },
                            {
                                "name": "label",
                                "documentation": "",
                                "type": {
                                    "kind": "Named",
                                    "name": "ReactChild",
                                    "id": 153,
                                    "importedFrom": "react"
                                },
                                "optional": true
                            },
                            {
                                "name": "onChange",
                                "documentation": "Callback when then field is modified.\nIt receives the full updatedObject for all fields and may return a new object\nthat is used instead.\n\nThis is useful if you need to change more fields than the specified path.",
                                "type": {
                                    "kind": "Function",
                                    "parameters": [
                                        {
                                            "name": "updatedObject",
                                            "documentation": "",
                                            "type": {
                                                "kind": "Named",
                                                "name": "any",
                                                "id": 1
                                            },
                                            "optional": false
                                        }
                                    ],
                                    "returnType": {
                                        "kind": "Named",
                                        "name": "any",
                                        "id": 1
                                    }
                                },
                                "optional": true
                            },
                            {
                                "name": "required",
                                "documentation": "If the field is required",
                                "type": {
                                    "kind": "Union",
                                    "types": [
                                        {
                                            "kind": "Named",
                                            "name": "boolean"
                                        },
                                        {
                                            "kind": "Function",
                                            "parameters": [
                                                {
                                                    "name": "object",
                                                    "documentation": "",
                                                    "type": {
                                                        "kind": "Named",
                                                        "name": "any",
                                                        "id": 1
                                                    },
                                                    "optional": false
                                                }
                                            ],
                                            "returnType": {
                                                "kind": "Named",
                                                "name": "boolean",
                                                "id": 12
                                            }
                                        }
                                    ]
                                },
                                "optional": true
                            },
                            {
                                "name": "validations",
                                "documentation": "Specify validation messages and possibly functions\n\nExample:\n```\n{\n   [required]: {\n     text: 'The field is required',\n   },\n   number: {\n     text: 'Only numbers are allowed',\n     validation: pattern(/^[0-9]+$/),\n   },\n}\n```",
                                "type": {
                                    "kind": "Object",
                                    "properties": [],
                                    "index": {
                                        "name": "validationError",
                                        "type": {
                                            "kind": "Object",
                                            "properties": [
                                                {
                                                    "name": "text",
                                                    "documentation": "",
                                                    "type": {
                                                        "kind": "Named",
                                                        "name": "string",
                                                        "id": 8
                                                    },
                                                    "optional": false
                                                },
                                                {
                                                    "name": "validation",
                                                    "documentation": "",
                                                    "type": {
                                                        "kind": "Function",
                                                        "parameters": [
                                                            {
                                                                "name": "value",
                                                                "documentation": "",
                                                                "type": {
                                                                    "kind": "Named",
                                                                    "name": "any",
                                                                    "id": 1
                                                                },
                                                                "optional": false
                                                            }
                                                        ],
                                                        "returnType": {
                                                            "kind": "Named",
                                                            "name": "boolean",
                                                            "id": 12
                                                        }
                                                    },
                                                    "optional": true
                                                }
                                            ]
                                        }
                                    }
                                },
                                "optional": true
                            },
                            {
                                "name": "validationError",
                                "documentation": "Error in validations to display. The text property of the corresponding\nfield in validations will be displayed. Only set this if you handle\nerrors externally.",
                                "type": {
                                    "kind": "Named",
                                    "name": "string",
                                    "id": 8
                                },
                                "optional": true
                            },
                            {
                                "name": "error",
                                "documentation": "Error to display, only set this if you handle errors externally\nand does not use validations.",
                                "type": {
                                    "kind": "Named",
                                    "name": "string",
                                    "id": 8
                                },
                                "optional": true
                            }
                        ]
                    }
                },
                "8": {
                    "id": "8",
                    "kind": "Type",
                    "exportedIn": [],
                    "name": "Properties",
                    "documentation": "",
                    "type": {
                        "kind": "Object",
                        "properties": [
                            {
                                "name": "fields",
                                "documentation": "Fields to show in the form\n\nExample:\n```\n[\n   {\n     path: ['username'],\n     label: 'Username',\n   }\n]\n```",
                                "type": {
                                    "kind": "Named",
                                    "name": "Array",
                                    "parameters": [
                                        {
                                            "kind": "Intersection",
                                            "types": [
                                                {
                                                    "kind": "Named",
                                                    "name": "FieldConfig",
                                                    "id": 128
                                                },
                                                {
                                                    "kind": "Named",
                                                    "name": "I",
                                                    "id": 162
                                                }
                                            ]
                                        }
                                    ],
                                    "id": 164,
                                    "importedFrom": "lib es2016"
                                },
                                "optional": false
                            },
                            {
                                "name": "value",
                                "documentation": "The object the form will manage.",
                                "type": {
                                    "kind": "Named",
                                    "name": "T",
                                    "id": 161
                                },
                                "optional": false
                            },
                            {
                                "name": "onSave",
                                "documentation": "Callback when the form is submitted, an updated object is passed as the only prop.\nIf a promise is returned the saveButton component will receive a loading prop set\nto true until the promise is resolved or rejected.",
                                "type": {
                                    "kind": "Function",
                                    "parameters": [
                                        {
                                            "name": "savedObject",
                                            "documentation": "",
                                            "type": {
                                                "kind": "Named",
                                                "name": "T",
                                                "id": 161
                                            },
                                            "optional": false
                                        }
                                    ],
                                    "returnType": {
                                        "kind": "Union",
                                        "types": [
                                            {
                                                "kind": "Named",
                                                "name": "void",
                                                "id": 14
                                            },
                                            {
                                                "kind": "Named",
                                                "name": "Promise",
                                                "parameters": [
                                                    {
                                                        "kind": "Named",
                                                        "name": "any",
                                                        "id": 1
                                                    }
                                                ],
                                                "id": 169,
                                                "importedFrom": "lib es2015"
                                            }
                                        ]
                                    }
                                },
                                "optional": false
                            },
                            {
                                "name": "onChange",
                                "documentation": "Callback when any field in the form is modified.\nIf this property is set, the form becomes a controlled component and the value\nprop must be maintained externally.\n\nThis is useful if you nest multiple FormHelpers or need to restrict user input\nbefore it appear on the screen.",
                                "type": {
                                    "kind": "Function",
                                    "parameters": [
                                        {
                                            "name": "updatedObject",
                                            "documentation": "",
                                            "type": {
                                                "kind": "Named",
                                                "name": "T",
                                                "id": 161
                                            },
                                            "optional": false
                                        },
                                        {
                                            "name": "valid",
                                            "documentation": "",
                                            "type": {
                                                "kind": "Named",
                                                "name": "boolean",
                                                "id": 12
                                            },
                                            "optional": false
                                        }
                                    ],
                                    "returnType": {
                                        "kind": "Named",
                                        "name": "void",
                                        "id": 14
                                    }
                                },
                                "optional": true
                            },
                            {
                                "name": "saveButton",
                                "documentation": "A string or a renderd React component. This property will be passed as a child\nto the buttonComponent",
                                "type": {
                                    "kind": "Named",
                                    "name": "ReactChild",
                                    "id": 153,
                                    "importedFrom": "react"
                                },
                                "optional": true
                            },
                            {
                                "name": "formComponent",
                                "documentation": "Component used for the form, defaults to a HTML form element.\n\nThis is useful to set to a div if you nest multiple FormHelpers.",
                                "type": {
                                    "kind": "Named",
                                    "name": "ReactType",
                                    "id": 149,
                                    "importedFrom": "react"
                                },
                                "optional": true
                            },
                            {
                                "name": "inputComponent",
                                "documentation": "Component used for fields that has not specified a different component.\nDefaults to a HTML input element.\n\nPassed props are:\n   value: The value for the field\n   onChange: A function to be called with an updated value\n   error: A string with an error message (if any)\n   onBlur: If errorOnTouched is set, a function will be passed that should\n           be called when the field looses focus.\n\nThe component will also receive props from the field configuration that are not\npath, validations or validationError, for example label and required.",
                                "type": {
                                    "kind": "Named",
                                    "name": "ReactType",
                                    "id": 149,
                                    "importedFrom": "react"
                                },
                                "optional": true
                            },
                            {
                                "name": "buttonComponent",
                                "documentation": "Button component to render the saveButton, defaults to an HTML button element.\n\nPassed props are:\n   disabled: If the button should be disabled\n   value: The current value of the form\n   loading: If the form is saving or not",
                                "type": {
                                    "kind": "Named",
                                    "name": "ReactType",
                                    "id": 149,
                                    "importedFrom": "react"
                                },
                                "optional": true
                            },
                            {
                                "name": "buttonProps",
                                "documentation": "Extra props that should be passed to the button component",
                                "type": {
                                    "kind": "Named",
                                    "name": "Object",
                                    "id": 28,
                                    "importedFrom": "lib es5"
                                },
                                "optional": true
                            },
                            {
                                "name": "style",
                                "documentation": "A style property that is passed to the formComponent",
                                "type": {
                                    "kind": "Named",
                                    "name": "CSSProperties",
                                    "id": 172,
                                    "importedFrom": "react"
                                },
                                "optional": true
                            },
                            {
                                "name": "formId",
                                "documentation": "An id property that is passed to the formComponent",
                                "type": {
                                    "kind": "Named",
                                    "name": "string",
                                    "id": 8
                                },
                                "optional": true
                            },
                            {
                                "name": "dirtyCheck",
                                "documentation": "Set to true to disable the saveButton if there are no changes",
                                "type": {
                                    "kind": "Named",
                                    "name": "boolean",
                                    "id": 12
                                },
                                "optional": true
                            },
                            {
                                "name": "errorOnTouched",
                                "documentation": "Set to true to only show error messages for fields that have been touched.\nIf an array is passed, only validationErrors in that array will be hidden until\nthe field is touched.",
                                "type": {
                                    "kind": "Union",
                                    "types": [
                                        {
                                            "kind": "Named",
                                            "name": "boolean"
                                        },
                                        {
                                            "kind": "Named",
                                            "name": "Array",
                                            "parameters": [
                                                {
                                                    "kind": "Named",
                                                    "name": "string",
                                                    "id": 8
                                                }
                                            ],
                                            "id": 139,
                                            "importedFrom": "lib es2016"
                                        }
                                    ]
                                },
                                "optional": true
                            },
                            {
                                "name": "disabled",
                                "documentation": "Set to true to disable the saveButton",
                                "type": {
                                    "kind": "Named",
                                    "name": "boolean",
                                    "id": 12
                                },
                                "optional": true
                            }
                        ]
                    }
                },
                "9": {
                    "id": "9",
                    "kind": "Component",
                    "exportedIn": [],
                    "name": "FormHelper",
                    "documentation": "",
                    "properties": [
                        {
                            "name": "children",
                            "documentation": "",
                            "type": {
                                "kind": "Named",
                                "name": "ReactNode",
                                "id": 210,
                                "importedFrom": "react"
                            },
                            "optional": true
                        },
                        {
                            "name": "fields",
                            "documentation": "Fields to show in the form\n\nExample:\n```\n[\n   {\n     path: ['username'],\n     label: 'Username',\n   }\n]\n```",
                            "type": {
                                "kind": "Named",
                                "name": "Array",
                                "parameters": [
                                    {
                                        "kind": "Intersection",
                                        "types": [
                                            {
                                                "kind": "Named",
                                                "name": "FieldConfig",
                                                "id": 128
                                            },
                                            {
                                                "kind": "Named",
                                                "name": "I",
                                                "id": 162
                                            }
                                        ]
                                    }
                                ],
                                "id": 164,
                                "importedFrom": "lib es2016"
                            },
                            "optional": false
                        },
                        {
                            "name": "value",
                            "documentation": "The object the form will manage.",
                            "type": {
                                "kind": "Named",
                                "name": "T",
                                "id": 161
                            },
                            "optional": false
                        },
                        {
                            "name": "onSave",
                            "documentation": "Callback when the form is submitted, an updated object is passed as the only prop.\nIf a promise is returned the saveButton component will receive a loading prop set\nto true until the promise is resolved or rejected.",
                            "type": {
                                "kind": "Function",
                                "parameters": [
                                    {
                                        "name": "savedObject",
                                        "documentation": "",
                                        "type": {
                                            "kind": "Named",
                                            "name": "T",
                                            "id": 161
                                        },
                                        "optional": false
                                    }
                                ],
                                "returnType": {
                                    "kind": "Union",
                                    "types": [
                                        {
                                            "kind": "Named",
                                            "name": "void",
                                            "id": 14
                                        },
                                        {
                                            "kind": "Named",
                                            "name": "Promise",
                                            "parameters": [
                                                {
                                                    "kind": "Named",
                                                    "name": "any",
                                                    "id": 1
                                                }
                                            ],
                                            "id": 169,
                                            "importedFrom": "lib es2015"
                                        }
                                    ]
                                }
                            },
                            "optional": false
                        },
                        {
                            "name": "onChange",
                            "documentation": "Callback when any field in the form is modified.\nIf this property is set, the form becomes a controlled component and the value\nprop must be maintained externally.\n\nThis is useful if you nest multiple FormHelpers or need to restrict user input\nbefore it appear on the screen.",
                            "type": {
                                "kind": "Function",
                                "parameters": [
                                    {
                                        "name": "updatedObject",
                                        "documentation": "",
                                        "type": {
                                            "kind": "Named",
                                            "name": "T",
                                            "id": 161
                                        },
                                        "optional": false
                                    },
                                    {
                                        "name": "valid",
                                        "documentation": "",
                                        "type": {
                                            "kind": "Named",
                                            "name": "boolean",
                                            "id": 12
                                        },
                                        "optional": false
                                    }
                                ],
                                "returnType": {
                                    "kind": "Named",
                                    "name": "void",
                                    "id": 14
                                }
                            },
                            "optional": true
                        },
                        {
                            "name": "saveButton",
                            "documentation": "A string or a renderd React component. This property will be passed as a child\nto the buttonComponent",
                            "type": {
                                "kind": "Named",
                                "name": "ReactChild",
                                "id": 153,
                                "importedFrom": "react"
                            },
                            "optional": true
                        },
                        {
                            "name": "formComponent",
                            "documentation": "Component used for the form, defaults to a HTML form element.\n\nThis is useful to set to a div if you nest multiple FormHelpers.",
                            "type": {
                                "kind": "Named",
                                "name": "ReactType",
                                "id": 149,
                                "importedFrom": "react"
                            },
                            "optional": true
                        },
                        {
                            "name": "inputComponent",
                            "documentation": "Component used for fields that has not specified a different component.\nDefaults to a HTML input element.\n\nPassed props are:\n   value: The value for the field\n   onChange: A function to be called with an updated value\n   error: A string with an error message (if any)\n   onBlur: If errorOnTouched is set, a function will be passed that should\n           be called when the field looses focus.\n\nThe component will also receive props from the field configuration that are not\npath, validations or validationError, for example label and required.",
                            "type": {
                                "kind": "Named",
                                "name": "ReactType",
                                "id": 149,
                                "importedFrom": "react"
                            },
                            "optional": true
                        },
                        {
                            "name": "buttonComponent",
                            "documentation": "Button component to render the saveButton, defaults to an HTML button element.\n\nPassed props are:\n   disabled: If the button should be disabled\n   value: The current value of the form\n   loading: If the form is saving or not",
                            "type": {
                                "kind": "Named",
                                "name": "ReactType",
                                "id": 149,
                                "importedFrom": "react"
                            },
                            "optional": true
                        },
                        {
                            "name": "buttonProps",
                            "documentation": "Extra props that should be passed to the button component",
                            "type": {
                                "kind": "Named",
                                "name": "Object",
                                "id": 28,
                                "importedFrom": "lib es5"
                            },
                            "optional": true
                        },
                        {
                            "name": "style",
                            "documentation": "A style property that is passed to the formComponent",
                            "type": {
                                "kind": "Named",
                                "name": "CSSProperties",
                                "id": 172,
                                "importedFrom": "react"
                            },
                            "optional": true
                        },
                        {
                            "name": "formId",
                            "documentation": "An id property that is passed to the formComponent",
                            "type": {
                                "kind": "Named",
                                "name": "string",
                                "id": 8
                            },
                            "optional": true
                        },
                        {
                            "name": "dirtyCheck",
                            "documentation": "Set to true to disable the saveButton if there are no changes",
                            "type": {
                                "kind": "Named",
                                "name": "boolean",
                                "id": 12
                            },
                            "optional": true
                        },
                        {
                            "name": "errorOnTouched",
                            "documentation": "Set to true to only show error messages for fields that have been touched.\nIf an array is passed, only validationErrors in that array will be hidden until\nthe field is touched.",
                            "type": {
                                "kind": "Union",
                                "types": [
                                    {
                                        "kind": "Named",
                                        "name": "boolean"
                                    },
                                    {
                                        "kind": "Named",
                                        "name": "Array",
                                        "parameters": [
                                            {
                                                "kind": "Named",
                                                "name": "string",
                                                "id": 8
                                            }
                                        ],
                                        "id": 139,
                                        "importedFrom": "lib es2016"
                                    }
                                ]
                            },
                            "optional": true
                        },
                        {
                            "name": "disabled",
                            "documentation": "Set to true to disable the saveButton",
                            "type": {
                                "kind": "Named",
                                "name": "boolean",
                                "id": 12
                            },
                            "optional": true
                        }
                    ]
                }
            },
            "reexports": [
                {
                    "name": "required",
                    "srcName": "required",
                    "path": "dist/src/validation.js",
                    "id": "2"
                },
                {
                    "name": "pattern",
                    "srcName": "pattern",
                    "path": "dist/src/validation.js",
                    "id": "3"
                }
            ]
        },
        "dist/src/extras/scroll-into-view-helper.js": {
            "name": "scroll-into-view-helper",
            "srcPath": "src/extras/scroll-into-view-helper.tsx",
            "outPath": "dist/src/extras/scroll-into-view-helper.js",
            "declarations": {
                "10": {
                    "id": "10",
                    "kind": "Type",
                    "exportedIn": [],
                    "name": "HOC",
                    "documentation": "",
                    "type": {
                        "kind": "Function",
                        "parameters": [
                            {
                                "name": "component",
                                "documentation": "",
                                "type": {
                                    "kind": "Named",
                                    "name": "ReactType",
                                    "id": 149,
                                    "importedFrom": "react"
                                },
                                "optional": false
                            }
                        ],
                        "returnType": {
                            "kind": "Named",
                            "name": "ReactType",
                            "id": 149,
                            "importedFrom": "react"
                        }
                    }
                },
                "11": {
                    "id": "11",
                    "kind": "Type",
                    "exportedIn": [],
                    "name": "Settings",
                    "documentation": "",
                    "type": {
                        "kind": "Object",
                        "properties": [
                            {
                                "name": "duration",
                                "documentation": "Scroll time in ms",
                                "type": {
                                    "kind": "Named",
                                    "name": "number",
                                    "id": 9
                                },
                                "optional": true
                            }
                        ]
                    }
                },
                "12": {
                    "id": "12",
                    "kind": "Function",
                    "exportedIn": [],
                    "name": "withScrollIntoView",
                    "documentation": "A HOC that keeps state for the [scrollIntoView] helper.\n\nIt provides **setAllowScrollIntoView** and **scroller** as props to the wrapped components.\n\n  - **setAllowScrollIntoView**: is a function that should be called to enable/disable scrolling.\n    For example, call `setAllowScrollIntoView(true)` when the user saves the form\n\n  - **scroller**: is an object that should passed as the first argument to [scollIntoView].\n    It should never be accessed directly",
                    "parameters": [
                        {
                            "name": "settings",
                            "documentation": "",
                            "type": {
                                "kind": "Named",
                                "name": "Settings",
                                "id": 842
                            },
                            "optional": false
                        }
                    ],
                    "returnType": {
                        "kind": "Named",
                        "name": "HOC",
                        "id": 841
                    }
                },
                "13": {
                    "id": "13",
                    "kind": "Function",
                    "exportedIn": [],
                    "name": "scrollIntoView",
                    "documentation": "A helper function to scroll the first field with a validationError property\ninto view.\n\nParameters:\n  - scroller: The scroller prop from the [withScrollIntoView] HOC\n  - fields: The fields to wrap\n\nExample:\n```\n<FormHelper\n   value={{}}\n   onSave={user => {\n     setAllowScrollIntoView(true)\n     return signIn(user)\n   }}\n   fields={scrollIntoView(scroller, [\n     {path: ['username'], label: 'Username',\n      validationError: missingUser && 'missingUser', validations: {\n        missingUser: {text: 'The username does not exist'},\n      }},\n     {path: ['password'], label: 'Password', type: 'password',\n      validationError: invalidPassword && 'invalidPassword', validations: {\n        invalidPassword: {text: 'Invalid Password'},\n      }},\n   ])}\n/>\n```",
                    "parameters": [
                        {
                            "name": "scroller",
                            "documentation": "",
                            "type": {
                                "kind": "Named",
                                "name": "any",
                                "id": 1
                            },
                            "optional": false
                        },
                        {
                            "name": "fields",
                            "documentation": "",
                            "type": {
                                "kind": "Named",
                                "name": "Array",
                                "parameters": [
                                    {
                                        "kind": "Named",
                                        "name": "FieldConfig",
                                        "id": 128
                                    }
                                ],
                                "id": 129,
                                "importedFrom": "lib es2016"
                            },
                            "optional": false
                        }
                    ],
                    "returnType": {
                        "kind": "Named",
                        "name": "Array",
                        "parameters": [
                            {
                                "kind": "Named",
                                "name": "FieldConfig",
                                "id": 128
                            }
                        ],
                        "id": 129,
                        "importedFrom": "lib es2016"
                    }
                }
            },
            "reexports": []
        },
        "dist/src/extras/scroll-into-view-helper.test.js": {
            "name": "scroll-into-view-helper.test",
            "srcPath": "src/extras/scroll-into-view-helper.test.tsx",
            "outPath": "dist/src/extras/scroll-into-view-helper.test.js",
            "declarations": {},
            "reexports": []
        },
        "dist/src/helpers.test.js": {
            "name": "helpers.test",
            "srcPath": "src/helpers.test.ts",
            "outPath": "dist/src/helpers.test.js",
            "declarations": {},
            "reexports": []
        },
        "dist/src/index.test.js": {
            "name": "index.test",
            "srcPath": "src/index.test.tsx",
            "outPath": "dist/src/index.test.js",
            "declarations": {},
            "reexports": []
        },
        "dist/src/validation.test.js": {
            "name": "validation.test",
            "srcPath": "src/validation.test.ts",
            "outPath": "dist/src/validation.test.js",
            "declarations": {},
            "reexports": []
        }
    },
    "readmes": {
        "dist/src": "# react-form-helper\n[![Build Status](https://travis-ci.org/beanloop/react-form-helper.svg?branch=master)](https://travis-ci.org/beanloop/react-form-helper)\n[![npm version](https://badge.fury.io/js/react-form-helper.svg)](https://badge.fury.io/js/react-form-helper)\n[![License](http://img.shields.io/:license-mit-blue.svg)](http://doge.mit-license.org)\n\nReact component for building forms with ease.\n\n## Install\n```\nyarn add react-form-helper\nnpm install --save react-form-helper\n```\n\n## Usage\nreact-form-helper accept custom components for form, input and button,\nwhich makes it easy to use with libraries such as react-toolbox and react-mdl.\n\nExample below shows a simple usage using react-toolbox:\n\n```jsx\nimport {FormHelper} from 'react-form-helper'\nimport Button from 'react-toolbox/lib/button'\nimport Checkbox from 'react-toolbox/lib/checkbox'\nimport Input from 'react-toolbox/lib/input'\n\nconst SignIn = () =>\n  <FormHelper\n    saveButton='Login'\n    inputComponent={Input}\n    buttonComponent={Button}\n    onSave={credentials => signIn(dispatch, credentials)}\n    object={{}}\n    fields={[\n      {path: ['email'], icon: 'email', label: 'Email', type: 'email'},\n      {path: ['password'], icon: 'lock', label: 'Password', type: 'password'},\n      {path: ['rememberMe'], component: ({value, onChange}) => (\n        <Checkbox\n          label='Remember me'\n          checked={!!value}\n          onChange={onChange}\n        />\n      )},\n    ]}\n  />\n)\n```\n\n## Docs\nExampels can be found [here](https://beanloop.github.io/react-form-helper/).\nAPI docs can be found as doc comments in the [code](https://github.com/beanloop/react-form-helper/blob/master/src/index.tsx).\n\n## License\nreact-form-helper is dual-licensed under Apache 2.0 and MIT terms.\n"
    }
}
